;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

{
 :profiles
 {:goku {:default true
;;         :alone   80 ; hold for .. ms to register single tap
;;         :held    50 ; TODO: not sure what it's for
;;         :delay   0 ; time after which the key press is delayed
;;         :sim     30}} ; keys need to be pressed within this threshold to be considered simultaneous
                      }}
 :templates {:open "open -a \"%s\""
             :open-g "open -g \"%s\""
             :shell "%s"
            }

 :applications {:safari ["^com\\.apple\\.Safari$"]
                :finder ["^com\\.apple\\.Finder$"]
               }
 :main [{:des   "Quit application by pressing command-q twice"
         :rules [[
            ;; <from> second cmd-q (when variable "command-q" is 1)
            :!C#Pq
            ;; <to>, 3 to action
            ;; 1. call cmd-q
            ;; 2. set variable "command-q" to 0
            ;; 3. cleanup the :cmdq notification (omit the thrid item to cleanup notification)
            [:!Cq ["command-q" 0] [:noti :cmdq]]
            ;; <condition> when variable "command-q" is 1
            ["command-q" 1]]


           [
            ;; <from> first cmd-q (when variable "command-q" is 0)
            :!C#Pq

            ;; <to>, 2 to action
            ;; 1. show notification with :id :cmdq, :text "Press Again to QUIT"
            ;; 2. set variable "command-q" to 1 (for the second press)
            [[:noti :cmdq "Press Again to QUIT"] ["command-q" 1]]

            ;; <condition> nil means no required condition
            nil

            ;; <additional-option>
            {
             ;; to_delayed_action documentation
             ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-delayed-action/
             :delayed {
                       ;; run 2 actions when no other key presses after basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "command-q" to 0
                       ;; 2. cleanup notification :id :cmdq
                       :invoked  [["command-q" 0] [:noti :cmdq]]

                       ;; run 2 actions when another key presses within basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "command-q" to 0
                       ;; 2. cleanup notification :id :cmdq
                       :canceled [["command-q" 0] [:noti :cmdq]]}}]]}
        {:des "Vim mode for general use"
         :rules [
                 [:!Th :left_arrow]
                 [:!Tj :down_arrow]
                 [:!Tk :up_arrow]
                 [:!Tl :right_arrow]
                 ]
        }
        {:des "Shortcut to launch Apps"
         :rules [
                 [:!CTt "${HOME}/.scripts/open_iterm2.sh"]
                 [:!Oc [:open "Safari"]]
                 [:!Ov [:open "Visual Studio Code"]]
                 [:!Oq [:open "QQ"]]
                 [:!Ow [:open "Wechat"]]
                ]
        }
        {:des "Safari specific shortcuts"
         :rules [
                  [:!Tt :!SCl [:safari]]
                ]
        }
        ]
 }
