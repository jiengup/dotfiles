// Place your key bindings in this file to override the defaultsauto[]
[
	{
		"key": "ctrl+t",
		"command": "workbench.view.explorer",
 	},

	{ // rename file
		"key": "ctrl+t",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "filesExplorerFocus"
 	},
	{
		"key": "ctrl+d",
		"command": "workbench.debug.action.focusVariablesView"
	},
	{
		"key": "ctrl+d",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "variablesFocused"
	},
	{
		"key": "ctrl+h",
		"command": "workbench.action.previousEditor"
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.view.remote",
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "!editorFocus"
	},
	{
		"key": "ctrl+s",
		"command": "workbench.action.findInFiles",
		"args": {
		"query": "${selectedText}",   // 使用选中内容作为搜索文本
		"triggerSearch": true,
		"isRegex": false,
		"matchWholeWord": false,
		"isCaseSensitive": false
		},
		"when": "editorTextFocus && editorHasSelection"
	},
	{
		"key": "ctrl+s",
		"command": "workbench.action.closeSidebar",
		"when": "searchViewletVisible"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.nextEditor"
	},
	{
		"key": "cmd+h",
		"command": "workbench.action.moveEditorToLeftGroup"
	},
	{
		"key": "cmd+j",
		"command": "workbench.action.moveEditorToAboveGroup"
	},
	{
		"key": "cmd+k",
		"command": "workbench.action.moveEditorToBelowGroup"
	},
	{
		"key": "cmd+l",
		"command": "workbench.action.moveEditorToRightGroup"
	},
    { // make cursor back to editor
		"key": "ctrl+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
    { // make cursor back to editor
		"key": "ctrl+h",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{ // rename file
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // disable old style rename shortcut
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // move down
		"key": "j",
		"command": "list.focusDown",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // move up
		"key": "k",
		"command": "list.focusUp",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ // move down at auto completion prompt
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{ // move up at auto completion prompt
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{ // move down at quick open
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenNavigateNext",
		"when": "inQuickOpen"
	},
	{ // move up at quick open
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inQuickOpen"
	},
	// {
	// 	"key": "tab",
	// 	"command": "selectNextSuggestion",
	// 	"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	// },
	{
		"key": "tab",
		"command": "workbench.action.quickOpenNavigateNext",
		"when": "inQuickOpen"
	},
	{
		"key": "shift+tab",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{ // open selected explorer item 
		"key": "enter",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{ // open reference localtion without quit reference view
		"key": "o",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ // select file to open
		"key": "l",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // toggle folder expand
		"key": "o",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // collapse folder
		"key": "h",
		"command": "list.collapse",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ // new file
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{ // new folder
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{ // delete file or folder
		"key": "d",
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{ // toggle terminal
		"key": "ctrl+\\",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{ // maxmize terminal
		"key": "ctrl+m",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+m",
		"command": "workbench.action.toggleZenMode"
	},
	{ // disable built-in ctrl + r so thant undo in vim can execute
		"key": "ctrl+r",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	// -- disable a bunch of keybindings which may have conflicts with above keybindings
	{
		"key": "ctrl+p",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+tab",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && textInputFocus"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+h",
		"command": "-java.action.showTypeHierarchy",
		"when": "editorTextFocus && editorLangId == 'java'"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.vim_ctrl+h",
		"when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.dash.specific",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "space",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "space",
		"command": "-debug.toggleBreakpoint",
		"when": "breakpointsFocused && !inputFocus"
	},
	{
		"key": "space",
		"command": "-filesExplorer.openFilePreserveFocus",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "space",
		"command": "-list.toggleExpand",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "space",
		"command": "-notification.toggle",
		"when": "notificationFocus"
	},
	{
		"key": "space",
		"command": "-refactorPreview.toggleCheckedState",
		"when": "listFocus && refactorPreview.enabled && !inputFocus"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "enter",
		"command": "-revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "g",
		"command": "-magit.refresh",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "g",
		"command": "vspacecode.showMagitRefreshMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.switchWindow"
	},
	{
		"key": "ctrl+t",
		"command": "-extension.vim_ctrl+t",
		"when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
	},
	{
		"key": "cmd+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+t",
		"command": "-editor.action.transposeLetters",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+g",
		"command": "-workbench.action.gotoLine"
	},
	{
		"key": "shift+alt+c",
		"command": "aws.amazonq.invokeInlineCompletion",
		"when": "aws.codewhisperer.connected && editorTextFocus"
	},
	{
		"key": "alt+c",
		"command": "-aws.amazonq.invokeInlineCompletion",
		"when": "aws.codewhisperer.connected && editorTextFocus"
	},
	{
		"key": "ctrl+c",
		"command": "workbench.action.toggleAuxiliaryBar",
	},
	{
		"key": "ctrl+cmd+i",
		"command": "-workbench.panel.chat",
		"when": "workbench.panel.chat.view.copilot.active"
	},
	{
		"key": "ctrl+b",
		"command": "-cursorLeft",
		"when": "textInputFocus"
	},
]